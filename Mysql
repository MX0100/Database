[root@host]# mysql -u root -p   
Enter password:******  # 登录后进入终端
//////////////////////////////////////////////////////////////////////////
DDL:
select databases();//查看当前处于哪个数据库当中
Create TABLE EMP(
        ID INT COMMENT '编号',
        workerno varchar(10) comment'姓名',
        name varchar(10) comment'age',
        gender char(1) comment'gender',    
        age tinyint unsigned comment'age',
        idcard char(18) comment'身份证号',
        entrydate date comment'入职时间'    
        ) comment '员工表';
 desc emp;//显示表结构
+-----------+---------------------+------+-----+---------+-------+
| Field     | Type                | Null | Key | Default | Extra |
+-----------+---------------------+------+-----+---------+-------+
| ID        | int(11)             | YES  |     | NULL    |       |
| workerno  | varchar(10)         | YES  |     | NULL    |       |
| name      | varchar(10)         | YES  |     | NULL    |       |
| gender    | char(1)             | YES  |     | NULL    |       |
| age       | tinyint(3) unsigned | YES  |     | NULL    |       |
| idcard    | char(18)            | YES  |     | NULL    |       |
| entrydate | date                | YES  |     | NULL    |       |
+-----------+---------------------+------+-----+---------+-------+
 alter table emp add nickname varchar(20) comment '昵称';
 ALTER TABLE EMP CHANGE NICKNAME USERNAME VARCHAR(30) COMMENT'用户名';//把nickname 改成username
 alter table emp drop username;
 alter table emp rename to employee;
 drop table if exists tb_users;
 truancate table employee;//删除表并重新创建
 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 DML:
insert into employee(id, workerno, name, gender, age, idcard, entrydate) values (1,'1','lucas','男',10,'211382200104023512','2023-09-01');
select * from employee;
desc employee;
insert into employee(id, workerno, name, gender, age, idcard, entrydate) values (2,'2','tomcat','男',10,'211382200105312566','2023-09-01');
select * from employee;
insert into employee values (3,'3','kite','男',17,'211382200106112570','2023-09-01'),(4,'4','Lilly','女',18,'211382199904286552','2023-09-01');
select * from employee;
+------+----------+--------+--------+------+--------------------+------------+
| ID   | workerno | name   | gender | age  | idcard             | entrydate  |
+------+----------+--------+--------+------+--------------------+------------+
|    1 | 1        | lucas  | 鐢?    |   10 | 211382200104023512 | 2023-09-01 |
|    2 | 2        | tomcat | 鐢?    |   10 | 211382200105312566 | 2023-09-01 |
|    3 | 3        | kite   | 鐢?    |   17 | 211382200106112570 | 2023-09-01 |
|    4 | 4        | Lilly  | 濂?    |   18 | 211382199904286552 | 2023-09-01 |
+------+----------+--------+--------+------+--------------------+------------+
update employee set name='Tom'where id=2;
update employee set name='kate',gender='女' where id=3;
update employee set entrydate='2023-09-02';
delete from employee where gender='女';
+------+----------+-------+--------+------+--------------------+------------+
| ID   | workerno | name  | gender | age  | idcard             | entrydate  |
+------+----------+-------+--------+------+--------------------+------------+
|    1 | 1        | lucas | 鐢?    |   10 | 211382200104023512 | 2023-09-02 |
|    2 | 2        | Tom   | 鐢?    |   10 | 211382200105312566 | 2023-09-02 |
+------+----------+-------+--------+------+--------------------+------------+
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DQL:
select workerno from employee;
select *from employee;
select distinct age as'年龄'from employee;
select *from employee where age<>20;
select *from employee where idcard is null;
select *from employee where idcard is not null;
select *from employee where age!=88;
select *from employee where age>=0 and age<=20;
select *from employee where age>=0 && age<=20;
select *from employee where age between 0 and 20;//必须从小到大写数字
select *from employee where gender='男' and idcard='211382200105312566';//and关键字
select *from employee where age=10 or age=0 or age=20;
select *from employee where age in(18,20,40);
select *from employee where name like '_____';
select *from employee where idcard like '%2';
select count(*) from employee;
select count(id) from employee;
select avg(age)from employee;
select max(age)from employee;
select min(age)from employee;
select sum(age) as'年龄之和'from employee where id<=2;
DQL；分组查询
/*1.根据性别分组，统计男性员工和女性员工的数量*/
select gender,count(*)from employee group by gender;
/*2.根据性别分组，统计男性员工和女性员工的平均年龄*/
select gender,avg(age)from employee group by gender;
alter table employee modify workaddress varchar(20);
update employee set workaddress ='Halifax'where id=1;
update employee set workaddress ='NewYork'where id=2;
/*3.查询年龄小于45的员工，并根据工作地址分组，获取员工数量大于0的工作地址*/
select workaddress,count(*) work_location from employee where age=10 group by workaddress having work_location>0;
+-------------+---------------+
| workaddress | work_location |
+-------------+---------------+
| Halifax     |             1 |
| NewYork     |             1 |
+-------------+---------------+
where与having的区别
执行时间不同：where是在分组之前进行过滤，不满足where条件，不参与分组；而having是分组之后对结果进行过滤。
             执行顺序：where>聚合函数>having.
判断条件不同:where不能对聚合函数进行判断，having可以。
            分组之后，查询的字段一般为聚合函数和分组字段，查询其他的字段无任何意义.
DQL；排序查询
